# =============================================================================
# DHAFNCK MCP MVP - ENVIRONMENT CONFIGURATION TEMPLATE
# =============================================================================
# Copy this file and replace placeholder values with your actual Supabase configuration
# Created: 2025-01-27
# Author: System Architect Agent

# =============================================================================
# SUPABASE CONFIGURATION
# =============================================================================
# Get these values from your Supabase project dashboard > Settings > API

# Project URL (found in Settings > API)
SUPABASE_URL=https://[your-project-id].supabase.co

# Anonymous key (safe for frontend use)
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.[your-anon-key]

# Service role key (backend only - keep secret!)
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.[your-service-role-key]

# JWT Secret (found in Settings > API > JWT Settings)
SUPABASE_JWT_SECRET=[your-jwt-secret]

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Direct database connection (found in Settings > Database)

# Full database URL
DATABASE_URL=postgresql://postgres:[your-password]@db.[your-project-id].supabase.co:5432/postgres

# Database connection components (if needed separately)
DB_HOST=db.[your-project-id].supabase.co
DB_PORT=5432
DB_NAME=postgres
DB_USER=postgres
DB_PASSWORD=[your-database-password]

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application environment
NODE_ENV=development
# NODE_ENV=production

# Application URLs
FRONTEND_URL=http://localhost:3000
BACKEND_URL=http://localhost:8000

# API Configuration
API_VERSION=v1
API_BASE_PATH=/api/v1

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Token settings
TOKEN_EXPIRY_HOURS=24
MAX_TOKENS_PER_USER=10

# Rate limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_BURST=10

# CORS settings
CORS_ORIGINS=http://localhost:3000,https://your-domain.com

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Container settings
CONTAINER_PORT=8000
CONTAINER_NAME=dhafnck-mcp-server

# Volume mounts
DATA_VOLUME_PATH=./data
LOGS_VOLUME_PATH=./logs

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO
LOG_FORMAT=json

# Log destinations
LOG_TO_FILE=true
LOG_TO_CONSOLE=true
LOG_FILE_PATH=./logs/app.log

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================

# Health check settings
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=5

# Metrics collection
ENABLE_METRICS=true
METRICS_PORT=9090

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Development only settings
DEBUG=true
HOT_RELOAD=true
AUTO_RESTART=true

# Testing
TEST_DATABASE_URL=postgresql://postgres:test@localhost:5432/dhafnck_mcp_test

# =============================================================================
# PRODUCTION CONFIGURATION (uncomment for production)
# =============================================================================

# SSL/TLS
# SSL_CERT_PATH=/path/to/cert.pem
# SSL_KEY_PATH=/path/to/key.pem
# FORCE_HTTPS=true

# Performance
# WORKER_PROCESSES=4
# MAX_CONNECTIONS=1000
# CONNECTION_TIMEOUT=30

# Caching
# REDIS_URL=redis://localhost:6379
# CACHE_TTL=3600

# =============================================================================
# EXTERNAL SERVICES (if needed)
# =============================================================================

# Email service (if not using Supabase email)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASSWORD=your-app-password

# Analytics (optional)
# ANALYTICS_API_KEY=your-analytics-key
# SENTRY_DSN=your-sentry-dsn

# =============================================================================
# USAGE INSTRUCTIONS
# =============================================================================

# 1. Copy this file to .env in your project root
# 2. Replace all [placeholder] values with actual values from Supabase
# 3. For Next.js frontend, create .env.local with NEXT_PUBLIC_ prefixed variables
# 4. For FastAPI backend, use this .env file directly
# 5. For Docker, these variables will be passed as environment variables

# =============================================================================
# SECURITY NOTES
# =============================================================================

# - Never commit .env files to version control
# - Keep service_role_key secret and only use in backend
# - Use anon_key for frontend applications
# - Rotate keys regularly for production
# - Use different databases for development/staging/production
# - Enable database backups for production

# =============================================================================
# FRONTEND SPECIFIC (.env.local for Next.js)
# =============================================================================

# Create a separate .env.local file for Next.js with these variables:
# NEXT_PUBLIC_SUPABASE_URL=https://[your-project-id].supabase.co
# NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.[your-anon-key]
# NEXT_PUBLIC_BACKEND_URL=http://localhost:8000

# =============================================================================
# BACKEND SPECIFIC (.env for FastAPI)
# =============================================================================

# Use the full configuration above for FastAPI backend
# Focus on SUPABASE_* and DATABASE_* variables
# Add any additional backend-specific configuration as needed 