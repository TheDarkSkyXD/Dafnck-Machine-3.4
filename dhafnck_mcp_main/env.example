# =============================================================================
# MCP Server Environment Configuration
# =============================================================================
# Copy this file to .env and configure the values for your environment
# 
# IMPORTANT: Never commit .env files to version control!
# Add .env to your .gitignore file
#
# For MCP/Cursor integration, also add these variables to the "env" section 
# of your .cursor/mcp.json file
# =============================================================================

# -----------------------------------------------------------------------------
# SESSION PERSISTENCE CONFIGURATION
# -----------------------------------------------------------------------------
# Redis configuration for persistent MCP sessions
# If Redis is not available, the system will automatically fallback to memory

# Redis connection URL (default: redis://localhost:6379/0)
REDIS_URL=redis://localhost:6379/0

# Session configuration
SESSION_TTL=3600                    # Session TTL in seconds (default: 1 hour)
MAX_EVENTS_PER_SESSION=1000        # Maximum events stored per session
SESSION_COMPRESSION=true           # Enable compression for session data
SESSION_KEY_PREFIX=mcp:session:    # Redis key prefix for sessions

# Redis connection settings (optional)
REDIS_SOCKET_TIMEOUT=5             # Socket timeout in seconds
REDIS_CONNECT_TIMEOUT=5            # Connection timeout in seconds
REDIS_HEALTH_CHECK_INTERVAL=30     # Health check interval in seconds

# -----------------------------------------------------------------------------
# AI PROVIDER API KEYS
# -----------------------------------------------------------------------------
# Configure API keys for the AI providers you want to use
# Only add the keys for providers you actually use

# OpenAI API Key
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-openai-api-key-here

# Anthropic API Key (Claude)
# Get from: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-your-anthropic-api-key-here

# Google AI API Key (Gemini)
# Get from: https://aistudio.google.com/app/apikey
GOOGLE_API_KEY=your-google-ai-api-key-here

# Perplexity AI API Key
# Get from: https://www.perplexity.ai/settings/api
PERPLEXITY_API_KEY=pplx-your-perplexity-api-key-here

# Mistral AI API Key
# Get from: https://console.mistral.ai/
MISTRAL_API_KEY=your-mistral-api-key-here

# OpenRouter API Key
# Get from: https://openrouter.ai/keys
OPENROUTER_API_KEY=sk-or-your-openrouter-api-key-here

# xAI API Key (Grok)
# Get from: https://console.x.ai/
XAI_API_KEY=xai-your-xai-api-key-here

# -----------------------------------------------------------------------------
# AZURE OPENAI CONFIGURATION
# -----------------------------------------------------------------------------
# If using Azure OpenAI, configure both the API key and endpoint

# Azure OpenAI API Key
AZURE_OPENAI_API_KEY=your-azure-openai-api-key-here

# Azure OpenAI Endpoint
AZURE_OPENAI_ENDPOINT=https://your-resource-name.openai.azure.com/

# Azure OpenAI API Version (optional)
AZURE_OPENAI_API_VERSION=2024-02-01

# -----------------------------------------------------------------------------
# OLLAMA CONFIGURATION
# -----------------------------------------------------------------------------
# If using local Ollama models

# Ollama API Key (usually not needed for local)
OLLAMA_API_KEY=your-ollama-api-key-if-needed

# Ollama Base URL (default: http://localhost:11434/api)
OLLAMA_BASE_URL=http://localhost:11434/api

# -----------------------------------------------------------------------------
# MCP SERVER CONFIGURATION
# -----------------------------------------------------------------------------
# General MCP server settings

# Server host and port
MCP_HOST=localhost
MCP_PORT=8000

# Server environment
MCP_ENVIRONMENT=development        # development, staging, production

# Enable debug mode
MCP_DEBUG=true

# Log level
MCP_LOG_LEVEL=INFO                # DEBUG, INFO, WARNING, ERROR, CRITICAL

# Enable CORS
MCP_ENABLE_CORS=true

# CORS allowed origins (comma-separated)
MCP_CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION
# -----------------------------------------------------------------------------
# Database settings for task management and persistence

# Database URL (SQLite example)
DATABASE_URL=sqlite:///./data/mcp_server.db

# Database connection pool settings
DB_POOL_SIZE=5
DB_MAX_OVERFLOW=10
DB_POOL_TIMEOUT=30

# -----------------------------------------------------------------------------
# CACHING CONFIGURATION
# -----------------------------------------------------------------------------
# Cache settings for performance optimization

# Enable caching
CACHE_ENABLED=true

# Cache TTL in seconds
CACHE_TTL=3600

# Cache backend (redis, memory)
CACHE_BACKEND=redis

# Cache key prefix
CACHE_KEY_PREFIX=mcp:cache:

# -----------------------------------------------------------------------------
# SECURITY CONFIGURATION
# -----------------------------------------------------------------------------
# Security and authentication settings

# JWT secret key (generate a secure random string)
JWT_SECRET_KEY=your-super-secure-jwt-secret-key-here

# JWT expiration time in seconds
JWT_EXPIRATION=86400              # 24 hours

# API rate limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS=100           # Requests per minute
RATE_LIMIT_WINDOW=60              # Window in seconds

# HTTPS settings
HTTPS_ENABLED=false
SSL_CERT_PATH=/path/to/cert.pem
SSL_KEY_PATH=/path/to/key.pem

# -----------------------------------------------------------------------------
# MONITORING AND OBSERVABILITY
# -----------------------------------------------------------------------------
# Monitoring and logging configuration

# Enable metrics collection
METRICS_ENABLED=true

# Metrics endpoint
METRICS_ENDPOINT=/metrics

# Health check endpoint
HEALTH_CHECK_ENDPOINT=/health

# Log file path
LOG_FILE_PATH=./logs/mcp_server.log

# Log rotation settings
LOG_MAX_SIZE=10MB
LOG_BACKUP_COUNT=5

# -----------------------------------------------------------------------------
# TASK MANAGEMENT CONFIGURATION
# -----------------------------------------------------------------------------
# Task management system settings

# Default task priority
DEFAULT_TASK_PRIORITY=medium

# Task cleanup interval (seconds)
TASK_CLEANUP_INTERVAL=3600

# Maximum tasks per project
MAX_TASKS_PER_PROJECT=10000

# Task export format
TASK_EXPORT_FORMAT=json

# -----------------------------------------------------------------------------
# AGENT CONFIGURATION
# -----------------------------------------------------------------------------
# Multi-agent system settings

# Default agent timeout (seconds)
AGENT_TIMEOUT=300

# Maximum concurrent agents
MAX_CONCURRENT_AGENTS=10

# Agent communication protocol
AGENT_PROTOCOL=http

# Agent registry URL
AGENT_REGISTRY_URL=http://localhost:8001

# -----------------------------------------------------------------------------
# DEVELOPMENT SETTINGS
# -----------------------------------------------------------------------------
# Development and testing configuration

# Enable development mode
DEV_MODE=true

# Enable hot reload
HOT_RELOAD=true

# Enable request logging
REQUEST_LOGGING=true

# Enable SQL query logging
SQL_LOGGING=false

# Test database URL
TEST_DATABASE_URL=sqlite:///./data/test_mcp_server.db

# Mock external services in development
MOCK_EXTERNAL_SERVICES=false

# -----------------------------------------------------------------------------
# BACKUP AND RECOVERY
# -----------------------------------------------------------------------------
# Backup and disaster recovery settings

# Enable automatic backups
BACKUP_ENABLED=true

# Backup interval (seconds)
BACKUP_INTERVAL=86400             # Daily

# Backup retention days
BACKUP_RETENTION_DAYS=30

# Backup directory
BACKUP_DIRECTORY=./backups

# -----------------------------------------------------------------------------
# PERFORMANCE TUNING
# -----------------------------------------------------------------------------
# Performance optimization settings

# Worker processes
WORKER_PROCESSES=4

# Worker connections
WORKER_CONNECTIONS=1000

# Keep alive timeout
KEEP_ALIVE_TIMEOUT=5

# Request timeout
REQUEST_TIMEOUT=30

# Memory limit per worker (MB)
WORKER_MEMORY_LIMIT=512

# -----------------------------------------------------------------------------
# FEATURE FLAGS
# -----------------------------------------------------------------------------
# Feature toggles for experimental features

# Enable experimental features
EXPERIMENTAL_FEATURES=false

# Enable beta features
BETA_FEATURES=false

# Enable advanced analytics
ADVANCED_ANALYTICS=false

# Enable real-time notifications
REAL_TIME_NOTIFICATIONS=true

# -----------------------------------------------------------------------------
# INTEGRATION SETTINGS
# -----------------------------------------------------------------------------
# Third-party service integrations

# Webhook URL for notifications
WEBHOOK_URL=https://your-webhook-url.com/notify

# Slack webhook URL
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Discord webhook URL
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/YOUR/DISCORD/WEBHOOK

# Email service configuration
EMAIL_SERVICE=smtp
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_TLS=true

# -----------------------------------------------------------------------------
# EXAMPLE USAGE
# -----------------------------------------------------------------------------
# Example configurations for different environments:

# Minimal setup (memory-only, no Redis):
# REDIS_URL=
# OPENAI_API_KEY=sk-your-key-here
# MCP_DEBUG=true

# Production setup:
# REDIS_URL=redis://production-redis:6379/0
# MCP_ENVIRONMENT=production
# MCP_DEBUG=false
# MCP_LOG_LEVEL=WARNING
# HTTPS_ENABLED=true
# RATE_LIMIT_ENABLED=true

# Development setup:
# REDIS_URL=redis://localhost:6379/0
# MCP_ENVIRONMENT=development
# MCP_DEBUG=true
# DEV_MODE=true
# HOT_RELOAD=true 